export const MESSAGES_CODE = {
  SUCCESSFUL: { Code: 'SUCCESSFUL', Message: 'Successfully!' },
};

//v0.45.11
export const MESSAGES_CODE_STAKING = {
  2: { Code: 2, Message: 'empty validator address' },
  3: { Code: 3, Message: 'validator does not exist' },
  4: {
    Code: 4,
    Message: 'validator already exist for this operator address; must use new validator operator address',
  },
  5: { Code: 5, Message: 'validator already exist for this pubkey; must use new validator pubkey' },
  6: { Code: 6, Message: 'validator pubkey type is not supported' },
  7: { Code: 7, Message: 'validator for this address is currently jailed' },
  8: { Code: 8, Message: 'failed to remove validator' },
  9: { Code: 9, Message: 'commission must be positive' },
  10: { Code: 10, Message: 'commission cannot be more than 100%' },
  11: { Code: 11, Message: 'commission cannot be more than the max rate' },
  12: { Code: 12, Message: 'commission cannot be changed more than once in 24h' },
  13: { Code: 13, Message: 'commission change rate must be positive' },
  14: { Code: 14, Message: 'commission change rate cannot be more than the max rate' },
  15: { Code: 15, Message: 'commission cannot be changed more than max change rate' },
  16: { Code: 16, Message: "validator's self delegation must be greater than their minimum self delegation" },
  17: { Code: 17, Message: 'minimum self delegation cannot be decrease' },
  18: { Code: 18, Message: 'empty delegator address' },
  19: { Code: 19, Message: 'no delegation for (address, validator) tuple' },
  20: { Code: 20, Message: 'delegator does not exist with address' },
  21: { Code: 21, Message: 'delegator does not contain delegation' },
  22: { Code: 22, Message: 'insufficient delegation shares"' },
  23: { Code: 23, Message: 'cannot delegate to an empty validator' },
  24: { Code: 24, Message: 'not enough delegation shares' },
  25: { Code: 25, Message: 'entry not mature' },
  26: { Code: 26, Message: 'no unbonding delegation found' },
  27: { Code: 27, Message: 'you can undelegate from the same validator only up to 7 times' },
  28: { Code: 28, Message: 'no redelegation found' },
  29: { Code: 29, Message: 'cannot redelegate to the same validator' },
  30: { Code: 30, Message: 'too few tokens to redelegate (truncates to zero tokens)' },
  31: { Code: 31, Message: 'redelegation destination validator not found' },
  32: {
    Code: 32,
    Message:
      'redelegation to this validator already in progress; first redelegation to this validator must complete before next redelegation',
  },
  33: { Code: 33, Message: 'you can only redelegate from and to this validator up to 7 times.' },
  34: { Code: 34, Message: 'cannot delegate to validators with invalid (zero) ex-rate' },
  35: { Code: 35, Message: 'both shares amount and shares percent provided' },
  36: { Code: 36, Message: 'neither shares amount nor shares percent provided' },
  37: { Code: 37, Message: 'invalid historical info' },
  38: { Code: 38, Message: 'no historical info found' },
  39: { Code: 39, Message: 'empty validator public key' },
  40: { Code: 40, Message: 'unbonding operation not found' },
  41: { Code: 41, Message: 'cannot un-hold unbonding operation that is not on hold' },
};

//v0.45.11
export const MESSAGES_CODE_PROPOSAL = {
  2: { Code: 2, Message: 'unknown proposal' },
  3: { Code: 3, Message: 'inactive proposal' },
  4: {
    Code: 4,
    Message: 'proposal already active',
  },
  5: { Code: 5, Message: 'invalid proposal content' },
  6: { Code: 6, Message: 'invalid proposal type' },
  7: { Code: 7, Message: 'invalid vote option' },
  8: { Code: 8, Message: 'invalid genesis state' },
  9: { Code: 9, Message: 'no handler exists for proposal type' },
};

//v0.45.11
export const MESSAGES_CODE_CONTRACT = {
  2: { Code: 2, Message: 'create wasm contract failed' },
  3: { Code: 3, Message: 'contract account already exists' },
  4: { Code: 4, Message: 'instantiate wasm contract failed' },
  5: { Code: 5, Message: 'execute wasm contract failed' },
  6: { Code: 6, Message: 'insufficient gas' },
  7: { Code: 7, Message: 'invalid genesis' },
  8: { Code: 8, Message: 'not found' },
  9: { Code: 9, Message: 'query wasm contract failed' },
  10: { Code: 10, Message: 'invalid CosmosMsg from the contract' },
  11: { Code: 11, Message: 'migrate wasm contract failed' },
  12: { Code: 12, Message: 'empty' },
  13: { Code: 13, Message: 'exceeds limit' },
  14: { Code: 14, Message: 'invalid' },
  15: { Code: 15, Message: 'duplicate' },
  16: { Code: 16, Message: 'max transfer channels' },
  17: { Code: 17, Message: 'unsupported for this contract' },
  18: { Code: 18, Message: 'pinning contract failed' },
  19: { Code: 19, Message: 'unpinning contract failed' },
  20: { Code: 20, Message: 'unknown message from the contract' },
  21: { Code: 21, Message: 'invalid event' },
  22: { Code: 22, Message: 'no such contract"' },
  23: { Code: 23, Message: 'not a JSON object' },
  24: { Code: 24, Message: 'no top-level key' },
  25: { Code: 25, Message: 'multiple top-level keys' },
  26: { Code: 26, Message: 'top-level key is not allowed' },
  27: { Code: 27, Message: 'max query stack size exceeded' },
};

//v0.45.11
export const MESSAGES_CODE_SDK = {
  1: { Code: 1, Message: 'internal' },
  2: { Code: 2, Message: 'tx parse error' },
  3: { Code: 3, Message: 'invalid sequence' },
  4: { Code: 4, Message: 'unauthorized', },
  5: { Code: 5, Message: 'insufficient funds' },
  6: { Code: 6, Message: 'unknown request' },
  7: { Code: 7, Message: 'invalid address' },
  8: { Code: 8, Message: 'invalid pubkey' },
  9: { Code: 9, Message: 'unknown address' },
  10: { Code: 10, Message: 'invalid coins' },
  11: { Code: 11, Message: 'out of gas' },
  12: { Code: 12, Message: 'memo too large' },
  13: { Code: 13, Message: 'insufficient fee' },
  14: { Code: 14, Message: 'maximum number of signatures exceeded' },
  15: { Code: 15, Message: 'no signatures supplied' },
  16: { Code: 16, Message: 'failed to marshal JSON bytes' },
  17: { Code: 17, Message: 'failed to unmarshal JSON bytes' },
  18: { Code: 18, Message: 'invalid request' },
  19: { Code: 19, Message: 'tx already in mempool' },
  20: { Code: 20, Message: 'mempool is full' },
  21: { Code: 21, Message: 'tx too large' },
  22: { Code: 22, Message: 'key not found' },
  23: { Code: 23, Message: 'invalid account password' },
  24: { Code: 24, Message: 'tx intended signer does not match the given signer' },
  25: { Code: 25, Message: 'invalid gas adjustment' },
  26: { Code: 26, Message: 'invalid height' },
  27: { Code: 27, Message: 'invalid version' },
  28: { Code: 28, Message: 'invalid chain-id' },
  29: { Code: 29, Message: 'invalid type' },
  30: { Code: 30, Message: 'tx timeout height' },
  31: { Code: 31, Message: 'unknown extension options' },
  32: { Code: 32, Message: 'incorrect account sequence' },
  33: { Code: 33, Message: 'failed packing protobuf message to Any' },
  34: { Code: 34, Message: 'failed unpacking protobuf message from Any' },
  35: { Code: 35, Message: 'internal logic error' },
  36: { Code: 36, Message: 'conflict' },
  37: { Code: 37, Message: 'feature not supported' },
  38: { Code: 38, Message: 'not found' },
  39: { Code: 39, Message: 'Internal IO error' },
  40: { Code: 40, Message: 'error in app.toml' },
  111222: { Code: 111222, Message: 'panic' },
};

export enum TYPE_CODE_SPACE {
  SDK = 'sdk',
  STAKING = 'staking',
  GOV = 'gov',
}
